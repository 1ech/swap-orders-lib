[{"/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/rollup.config.js":"1","/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/abis/types/ArgentWalletDetector.d.ts":"2","/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/abis/types/Eip2612.d.ts":"3","/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/abis/types/EnsPublicResolver.d.ts":"4","/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/abis/types/EnsRegistrar.d.ts":"5","/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/abis/types/Erc20.d.ts":"6","/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/abis/types/Erc20Bytes32.d.ts":"7","/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/abis/types/Multicall.d.ts":"8","/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/abis/types/Multicall2.d.ts":"9","/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/abis/types/Unisocks.d.ts":"10","/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/abis/types/Weth.d.ts":"11","/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/abis/types/commons.ts":"12","/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/abis/types/index.ts":"13","/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/components/Button/index.tsx":"14","/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/components/Card/index.tsx":"15","/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/components/Column/index.tsx":"16","/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/components/CurrencyInputPanel/FiatValue.tsx":"17","/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/components/CurrencyInputPanel/RatePercentage.tsx":"18","/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/components/CurrencyInputPanel/index.tsx":"19","/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/components/CurrencyLogo/index.tsx":"20","/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/components/DoubleLogo/index.tsx":"21","/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/components/GelatoLimitOrder/AppBody.tsx":"22","/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/components/GelatoLimitOrder/index.tsx":"23","/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/components/GelatoStopLimitOrder/AppBody.tsx":"24","/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/components/GelatoStopLimitOrder/index.tsx":"25","/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/components/HoverInlineText/index.tsx":"26","/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/components/LimitOrdersHistory/ConfirmCancellationModal.tsx":"27","/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/components/LimitOrdersHistory/OrderCard/index.tsx":"28","/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/components/LimitOrdersHistory/index.tsx":"29","/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/components/ListLogo/index.tsx":"30","/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/components/Loader/index.tsx":"31","/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/components/Logo/index.tsx":"32","/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/components/Modal/index.tsx":"33","/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/components/NumericalInput/index.tsx":"34","/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/components/Popover/index.tsx":"35","/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/components/QuestionHelper/index.tsx":"36","/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/components/Row/index.tsx":"37","/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/components/SearchModal/CommonBases.tsx":"38","/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/components/SearchModal/CurrencyList.tsx":"39","/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/components/SearchModal/CurrencySearch.tsx":"40","/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/components/SearchModal/CurrencySearchModal.tsx":"41","/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/components/SearchModal/ImportList.tsx":"42","/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/components/SearchModal/ImportRow.tsx":"43","/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/components/SearchModal/ImportToken.tsx":"44","/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/components/SearchModal/Manage.tsx":"45","/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/components/SearchModal/ManageLists.tsx":"46","/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/components/SearchModal/ManageTokens.tsx":"47","/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/components/SearchModal/SortButton.tsx":"48","/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/components/SearchModal/filtering.ts":"49","/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/components/SearchModal/sorting.ts":"50","/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/components/SearchModal/styleds.tsx":"51","/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/components/StopLimitOrdersHistory/ConfirmCancellationModal.tsx":"52","/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/components/StopLimitOrdersHistory/OrderCard/index.tsx":"53","/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/components/StopLimitOrdersHistory/index.tsx":"54","/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/components/Toggle/ListToggle.tsx":"55","/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/components/Toggle/MultiToggle.tsx":"56","/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/components/Toggle/index.tsx":"57","/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/components/TokenWarningModal/index.tsx":"58","/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/components/Tooltip/index.tsx":"59","/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/components/TransactionConfirmationModal/index.tsx":"60","/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/components/order/AdvancedStopLimitSwapDetails.tsx":"61","/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/components/order/AdvancedSwapDetails.tsx":"62","/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/components/order/ConfirmSwapModal.tsx":"63","/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/components/order/FormattedPriceImpact.tsx":"64","/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/components/order/Slippage.tsx":"65","/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/components/order/SwapHeader.tsx":"66","/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/components/order/SwapModalFooter.tsx":"67","/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/components/order/SwapModalHeader.tsx":"68","/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/components/order/SwapRoute.tsx":"69","/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/components/order/TradePrice.tsx":"70","/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/components/order/UnsupportedCurrencyFooter.tsx":"71","/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/components/order/confirmPriceImpactWithoutFee.ts":"72","/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/components/order/styleds.tsx":"73","/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/constants/addresses.ts":"74","/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/constants/index.ts":"75","/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/constants/lists.ts":"76","/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/constants/misc.ts":"77","/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/constants/routing.ts":"78","/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/constants/tokens.avax.ts":"79","/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/constants/tokens.bsc.ts":"80","/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/constants/tokens.fantom.ts":"81","/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/constants/tokens.matic.ts":"82","/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/constants/tokens.ts":"83","/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/custom.d.ts":"84","/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/entities/errors.ts":"85","/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/entities/pair.ts":"86","/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/hooks/Balances.ts":"87","/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/hooks/Tokens.ts":"88","/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/hooks/gelato/index.ts":"89","/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/hooks/gelato/useGelatoLimitOrders.ts":"90","/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/hooks/gelato/useGelatoLimitOrdersHandlers.ts":"91","/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/hooks/gelato/useGelatoLimitOrdersHistory.ts":"92","/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/hooks/gelato/useGelatoLimitOrdersLib.ts":"93","/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/hooks/gelato/useGelatoStopLimitOrders.ts":"94","/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/hooks/gelato/useGelatoStopLimitOrdersHandlers.ts":"95","/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/hooks/gelato/useGelatoStopLimitOrdersHistory.ts":"96","/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/hooks/gelato/useGelatoStopLimitOrdersLib.ts":"97","/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/hooks/useAllCurrencyCombinations.ts":"98","/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/hooks/useApproveCallback.ts":"99","/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/hooks/useColor.ts":"100","/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/hooks/useContract.ts":"101","/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/hooks/useDebounce.ts":"102","/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/hooks/useDebouncedChangeHandler.tsx":"103","/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/hooks/useFetchListCallback.ts":"104","/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/hooks/useGasOverhead.ts":"105","/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/hooks/useGasPrice.ts":"106","/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/hooks/useHttpLocations.ts":"107","/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/hooks/useInterval.ts":"108","/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/hooks/useIsArgentWallet.ts":"109","/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/hooks/useIsSwapUnsupported.ts":"110","/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/hooks/useIsWindowVisible.ts":"111","/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/hooks/useLast.ts":"112","/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/hooks/useOnClickOutside.tsx":"113","/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/hooks/usePairs.ts":"114","/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/hooks/usePrevious.ts":"115","/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/hooks/useTheme.ts":"116","/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/hooks/useToggle.ts":"117","/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/hooks/useTokenAllowance.ts":"118","/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/hooks/useTrade.ts":"119","/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/hooks/useUSDCPrice.ts":"120","/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/hooks/useWindowSize.ts":"121","/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/index.tsx":"122","/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/state/gapplication/actions.ts":"123","/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/state/gapplication/hooks.ts":"124","/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/state/gapplication/reducer.ts":"125","/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/state/gapplication/updater.ts":"126","/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/state/glists/actions.ts":"127","/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/state/glists/hooks.ts":"128","/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/state/glists/reducer.ts":"129","/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/state/glists/updater.ts":"130","/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/state/glists/wrappedTokenInfo.ts":"131","/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/state/gmulticall/actions.ts":"132","/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/state/gmulticall/hooks.ts":"133","/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/state/gmulticall/reducer.ts":"134","/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/state/gmulticall/updater.tsx":"135","/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/state/gorder/actions.ts":"136","/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/state/gorder/hooks.ts":"137","/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/state/gorder/reducer.ts":"138","/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/state/gstoplimit/actions.ts":"139","/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/state/gstoplimit/hooks.ts":"140","/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/state/gstoplimit/reducer.ts":"141","/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/state/gtransactions/actions.ts":"142","/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/state/gtransactions/hooks.tsx":"143","/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/state/gtransactions/reducer.ts":"144","/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/state/gtransactions/updater.tsx":"145","/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/state/guser/actions.ts":"146","/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/state/guser/hooks.ts":"147","/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/state/guser/reducer.ts":"148","/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/state/index.ts":"149","/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/theme/components.tsx":"150","/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/theme/index.tsx":"151","/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/theme/styled.d.ts":"152","/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/types/index.ts":"153","/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/utils/chunkArray.ts":"154","/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/utils/computeFiatValuePriceImpact.tsx":"155","/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/utils/constructSameAddressMap.ts":"156","/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/utils/contenthashToUri.ts":"157","/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/utils/currencyId.ts":"158","/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/utils/formatTokenAmount.ts":"159","/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/utils/getExplorerLink.ts":"160","/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/utils/getTokenList.ts":"161","/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/utils/index.ts":"162","/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/utils/isTradeBetter.ts":"163","/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/utils/isZero.ts":"164","/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/utils/listVersionLabel.ts":"165","/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/utils/localStorageOrders.ts":"166","/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/utils/maxAmountSpend.ts":"167","/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/utils/pairs.ts":"168","/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/utils/parseENSAddress.ts":"169","/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/utils/prices.ts":"170","/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/utils/resolveENSContentHash.ts":"171","/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/utils/retry.ts":"172","/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/utils/supportedChainId.ts":"173","/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/utils/unwrappedToken.ts":"174","/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/utils/uriToHttp.ts":"175","/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/web3/index.tsx":"176"},{"size":1791,"mtime":1637263716624,"results":"177","hashOfConfig":"178"},{"size":11386,"mtime":1637263716626,"results":"179","hashOfConfig":"178"},{"size":3903,"mtime":1637263716627,"results":"180","hashOfConfig":"178"},{"size":27308,"mtime":1637263716627,"results":"181","hashOfConfig":"178"},{"size":16035,"mtime":1637263716627,"results":"182","hashOfConfig":"178"},{"size":10097,"mtime":1637263716628,"results":"183","hashOfConfig":"178"},{"size":3691,"mtime":1637263716628,"results":"184","hashOfConfig":"178"},{"size":14659,"mtime":1637263716628,"results":"185","hashOfConfig":"178"},{"size":13936,"mtime":1637263716628,"results":"186","hashOfConfig":"178"},{"size":21486,"mtime":1637263716628,"results":"187","hashOfConfig":"178"},{"size":12010,"mtime":1637263716628,"results":"188","hashOfConfig":"178"},{"size":888,"mtime":1637263716628,"results":"189","hashOfConfig":"178"},{"size":578,"mtime":1637263716628,"results":"190","hashOfConfig":"178"},{"size":11283,"mtime":1637263716631,"results":"191","hashOfConfig":"178"},{"size":1518,"mtime":1637263716631,"results":"192","hashOfConfig":"178"},{"size":706,"mtime":1637263716631,"results":"193","hashOfConfig":"178"},{"size":1312,"mtime":1637263716631,"results":"194","hashOfConfig":"178"},{"size":1467,"mtime":1637263716632,"results":"195","hashOfConfig":"178"},{"size":15242,"mtime":1637263716632,"results":"196","hashOfConfig":"178"},{"size":3152,"mtime":1637263716632,"results":"197","hashOfConfig":"178"},{"size":1220,"mtime":1637263716632,"results":"198","hashOfConfig":"178"},{"size":731,"mtime":1637263716632,"results":"199","hashOfConfig":"178"},{"size":22039,"mtime":1637272461207,"results":"200","hashOfConfig":"178"},{"size":731,"mtime":1637263741864,"results":"201","hashOfConfig":"178"},{"size":21369,"mtime":1637272461356,"results":"202","hashOfConfig":"178"},{"size":1594,"mtime":1637263716633,"results":"203","hashOfConfig":"178"},{"size":2464,"mtime":1637263716633,"results":"204","hashOfConfig":"178"},{"size":17384,"mtime":1637263716634,"results":"205","hashOfConfig":"178"},{"size":6475,"mtime":1637263716634,"results":"206","hashOfConfig":"178"},{"size":592,"mtime":1637263716635,"results":"207","hashOfConfig":"178"},{"size":1164,"mtime":1637263716635,"results":"208","hashOfConfig":"178"},{"size":972,"mtime":1637263716635,"results":"209","hashOfConfig":"178"},{"size":4386,"mtime":1637263716635,"results":"210","hashOfConfig":"178"},{"size":2764,"mtime":1637263716636,"results":"211","hashOfConfig":"178"},{"size":3232,"mtime":1637263716636,"results":"212","hashOfConfig":"178"},{"size":2166,"mtime":1637263716636,"results":"213","hashOfConfig":"178"},{"size":1151,"mtime":1637263716636,"results":"214","hashOfConfig":"178"},{"size":2057,"mtime":1637263716636,"results":"215","hashOfConfig":"178"},{"size":7820,"mtime":1637263716637,"results":"216","hashOfConfig":"178"},{"size":7893,"mtime":1637263716637,"results":"217","hashOfConfig":"178"},{"size":3825,"mtime":1637263716637,"results":"218","hashOfConfig":"178"},{"size":6291,"mtime":1637263716637,"results":"219","hashOfConfig":"178"},{"size":2994,"mtime":1637263716637,"results":"220","hashOfConfig":"178"},{"size":5505,"mtime":1637263716638,"results":"221","hashOfConfig":"178"},{"size":2774,"mtime":1637263716638,"results":"222","hashOfConfig":"178"},{"size":12767,"mtime":1637263716638,"results":"223","hashOfConfig":"178"},{"size":5240,"mtime":1637263716638,"results":"224","hashOfConfig":"178"},{"size":723,"mtime":1637263716638,"results":"225","hashOfConfig":"178"},{"size":2453,"mtime":1637263716638,"results":"226","hashOfConfig":"178"},{"size":1793,"mtime":1637263716639,"results":"227","hashOfConfig":"178"},{"size":2919,"mtime":1637263716639,"results":"228","hashOfConfig":"178"},{"size":2464,"mtime":1637263741864,"results":"229","hashOfConfig":"178"},{"size":18828,"mtime":1637272463174,"results":"230","hashOfConfig":"178"},{"size":6487,"mtime":1637272463013,"results":"231","hashOfConfig":"178"},{"size":1466,"mtime":1637263716639,"results":"232","hashOfConfig":"178"},{"size":1765,"mtime":1637263716639,"results":"233","hashOfConfig":"178"},{"size":1935,"mtime":1637263716639,"results":"234","hashOfConfig":"178"},{"size":515,"mtime":1637263716639,"results":"235","hashOfConfig":"178"},{"size":1801,"mtime":1637263716640,"results":"236","hashOfConfig":"178"},{"size":6579,"mtime":1637263716640,"results":"237","hashOfConfig":"178"},{"size":6258,"mtime":1637272461795,"results":"238","hashOfConfig":"178"},{"size":6198,"mtime":1637263716640,"results":"239","hashOfConfig":"178"},{"size":3006,"mtime":1637272461897,"results":"240","hashOfConfig":"178"},{"size":871,"mtime":1637263716640,"results":"241","hashOfConfig":"178"},{"size":4787,"mtime":1637272461968,"results":"242","hashOfConfig":"178"},{"size":4016,"mtime":1637272462079,"results":"243","hashOfConfig":"178"},{"size":1018,"mtime":1637263716641,"results":"244","hashOfConfig":"178"},{"size":7918,"mtime":1637272800936,"results":"245","hashOfConfig":"178"},{"size":1200,"mtime":1637263716641,"results":"246","hashOfConfig":"178"},{"size":1828,"mtime":1637263716641,"results":"247","hashOfConfig":"178"},{"size":3795,"mtime":1637263716641,"results":"248","hashOfConfig":"178"},{"size":1016,"mtime":1637263716641,"results":"249","hashOfConfig":"178"},{"size":4369,"mtime":1637263716642,"results":"250","hashOfConfig":"178"},{"size":2130,"mtime":1637263716642,"results":"251","hashOfConfig":"178"},{"size":3925,"mtime":1637263716642,"results":"252","hashOfConfig":"178"},{"size":2328,"mtime":1637263716642,"results":"253","hashOfConfig":"178"},{"size":1786,"mtime":1637263716642,"results":"254","hashOfConfig":"178"},{"size":3996,"mtime":1637263716642,"results":"255","hashOfConfig":"178"},{"size":494,"mtime":1637263716643,"results":"256","hashOfConfig":"178"},{"size":633,"mtime":1637263716643,"results":"257","hashOfConfig":"178"},{"size":1082,"mtime":1637263716643,"results":"258","hashOfConfig":"178"},{"size":1063,"mtime":1637263716643,"results":"259","hashOfConfig":"178"},{"size":4466,"mtime":1637263716643,"results":"260","hashOfConfig":"178"},{"size":725,"mtime":1637263716643,"results":"261","hashOfConfig":"178"},{"size":1079,"mtime":1637263716643,"results":"262","hashOfConfig":"178"},{"size":9680,"mtime":1637263716644,"results":"263","hashOfConfig":"178"},{"size":5481,"mtime":1637263716644,"results":"264","hashOfConfig":"178"},{"size":10660,"mtime":1637263716644,"results":"265","hashOfConfig":"178"},{"size":740,"mtime":1637263741867,"results":"266","hashOfConfig":"178"},{"size":640,"mtime":1637263716645,"results":"267","hashOfConfig":"178"},{"size":6038,"mtime":1637272463687,"results":"268","hashOfConfig":"178"},{"size":7867,"mtime":1637263716645,"results":"269","hashOfConfig":"178"},{"size":907,"mtime":1637263716645,"results":"270","hashOfConfig":"178"},{"size":686,"mtime":1637263741867,"results":"271","hashOfConfig":"178"},{"size":6631,"mtime":1637272463799,"results":"272","hashOfConfig":"178"},{"size":8052,"mtime":1637272463845,"results":"273","hashOfConfig":"178"},{"size":769,"mtime":1637272463856,"results":"274","hashOfConfig":"178"},{"size":2597,"mtime":1637263716645,"results":"275","hashOfConfig":"178"},{"size":4235,"mtime":1637263716646,"results":"276","hashOfConfig":"178"},{"size":2148,"mtime":1637263716646,"results":"277","hashOfConfig":"178"},{"size":3532,"mtime":1637263716646,"results":"278","hashOfConfig":"178"},{"size":719,"mtime":1637263716646,"results":"279","hashOfConfig":"178"},{"size":1157,"mtime":1637263716646,"results":"280","hashOfConfig":"178"},{"size":1764,"mtime":1637263716646,"results":"281","hashOfConfig":"178"},{"size":3418,"mtime":1637263716646,"results":"282","hashOfConfig":"178"},{"size":930,"mtime":1637263716647,"results":"283","hashOfConfig":"178"},{"size":234,"mtime":1637263716647,"results":"284","hashOfConfig":"178"},{"size":645,"mtime":1637263716647,"results":"285","hashOfConfig":"178"},{"size":669,"mtime":1637263716647,"results":"286","hashOfConfig":"178"},{"size":888,"mtime":1637263716647,"results":"287","hashOfConfig":"178"},{"size":798,"mtime":1637263716647,"results":"288","hashOfConfig":"178"},{"size":1046,"mtime":1637263716647,"results":"289","hashOfConfig":"178"},{"size":718,"mtime":1637263716647,"results":"290","hashOfConfig":"178"},{"size":2608,"mtime":1637263716647,"results":"291","hashOfConfig":"178"},{"size":550,"mtime":1637263716647,"results":"292","hashOfConfig":"178"},{"size":189,"mtime":1637263716648,"results":"293","hashOfConfig":"178"},{"size":278,"mtime":1637263716648,"results":"294","hashOfConfig":"178"},{"size":1031,"mtime":1637263716648,"results":"295","hashOfConfig":"178"},{"size":4613,"mtime":1637263716648,"results":"296","hashOfConfig":"178"},{"size":3593,"mtime":1637263716648,"results":"297","hashOfConfig":"178"},{"size":687,"mtime":1637263716648,"results":"298","hashOfConfig":"178"},{"size":3736,"mtime":1637263741868,"results":"299","hashOfConfig":"178"},{"size":279,"mtime":1637263716649,"results":"300","hashOfConfig":"178"},{"size":386,"mtime":1637263716649,"results":"301","hashOfConfig":"178"},{"size":957,"mtime":1637263716649,"results":"302","hashOfConfig":"178"},{"size":2109,"mtime":1637263716649,"results":"303","hashOfConfig":"178"},{"size":1215,"mtime":1637263716649,"results":"304","hashOfConfig":"178"},{"size":4243,"mtime":1637263716649,"results":"305","hashOfConfig":"178"},{"size":4703,"mtime":1637263716650,"results":"306","hashOfConfig":"178"},{"size":6603,"mtime":1637263716650,"results":"307","hashOfConfig":"178"},{"size":2306,"mtime":1637263716650,"results":"308","hashOfConfig":"178"},{"size":2024,"mtime":1637263716651,"results":"309","hashOfConfig":"178"},{"size":8790,"mtime":1637263716651,"results":"310","hashOfConfig":"178"},{"size":4332,"mtime":1637263716651,"results":"311","hashOfConfig":"178"},{"size":9438,"mtime":1637263716652,"results":"312","hashOfConfig":"178"},{"size":662,"mtime":1637263716652,"results":"313","hashOfConfig":"178"},{"size":10990,"mtime":1637263716652,"results":"314","hashOfConfig":"178"},{"size":2622,"mtime":1637263716653,"results":"315","hashOfConfig":"178"},{"size":780,"mtime":1637263741868,"results":"316","hashOfConfig":"178"},{"size":10829,"mtime":1637272464942,"results":"317","hashOfConfig":"178"},{"size":2832,"mtime":1637272464961,"results":"318","hashOfConfig":"178"},{"size":1089,"mtime":1637263716653,"results":"319","hashOfConfig":"178"},{"size":3335,"mtime":1637263741869,"results":"320","hashOfConfig":"178"},{"size":2970,"mtime":1637263716653,"results":"321","hashOfConfig":"178"},{"size":2881,"mtime":1637263716653,"results":"322","hashOfConfig":"178"},{"size":782,"mtime":1637263716653,"results":"323","hashOfConfig":"178"},{"size":5432,"mtime":1637263716654,"results":"324","hashOfConfig":"178"},{"size":2602,"mtime":1637263716654,"results":"325","hashOfConfig":"178"},{"size":760,"mtime":1637263741869,"results":"326","hashOfConfig":"178"},{"size":6109,"mtime":1637263716654,"results":"327","hashOfConfig":"178"},{"size":6352,"mtime":1637263716654,"results":"328","hashOfConfig":"178"},{"size":1449,"mtime":1637263716655,"results":"329","hashOfConfig":"178"},{"size":624,"mtime":1637263716655,"results":"330","hashOfConfig":"178"},{"size":1357,"mtime":1637263716655,"results":"331","hashOfConfig":"178"},{"size":714,"mtime":1637263716655,"results":"332","hashOfConfig":"178"},{"size":211,"mtime":1637263716655,"results":"333","hashOfConfig":"178"},{"size":1456,"mtime":1637263716655,"results":"334","hashOfConfig":"178"},{"size":233,"mtime":1637263716655,"results":"335","hashOfConfig":"178"},{"size":728,"mtime":1637263716656,"results":"336","hashOfConfig":"178"},{"size":1199,"mtime":1637263716656,"results":"337","hashOfConfig":"178"},{"size":2602,"mtime":1637263716656,"results":"338","hashOfConfig":"178"},{"size":6706,"mtime":1637263716657,"results":"339","hashOfConfig":"178"},{"size":1161,"mtime":1637263716657,"results":"340","hashOfConfig":"178"},{"size":186,"mtime":1637263716657,"results":"341","hashOfConfig":"178"},{"size":184,"mtime":1637263716657,"results":"342","hashOfConfig":"178"},{"size":4045,"mtime":1637272465444,"results":"343","hashOfConfig":"178"},{"size":812,"mtime":1637263716657,"results":"344","hashOfConfig":"178"},{"size":6441,"mtime":1637263741870,"results":"345","hashOfConfig":"178"},{"size":352,"mtime":1637263716657,"results":"346","hashOfConfig":"178"},{"size":2346,"mtime":1637263716658,"results":"347","hashOfConfig":"178"},{"size":1748,"mtime":1637263716658,"results":"348","hashOfConfig":"178"},{"size":1880,"mtime":1637263716658,"results":"349","hashOfConfig":"178"},{"size":380,"mtime":1637263716661,"results":"350","hashOfConfig":"178"},{"size":421,"mtime":1637263716661,"results":"351","hashOfConfig":"178"},{"size":873,"mtime":1637263716661,"results":"352","hashOfConfig":"178"},{"size":1543,"mtime":1637263716661,"results":"353","hashOfConfig":"178"},{"filePath":"354","messages":"355","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1lqu3ml",{"filePath":"356","messages":"357","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"358","messages":"359","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"360","messages":"361","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"362","messages":"363","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"364","messages":"365","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"366","messages":"367","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"368","messages":"369","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"370","messages":"371","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"372","messages":"373","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"374","messages":"375","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"376","messages":"377","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"378","messages":"379","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"380","messages":"381","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"382","messages":"383","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"384","messages":"385","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"386","messages":"387","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"388","messages":"389","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"390","messages":"391","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"392","messages":"393","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"394","messages":"395","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"396","messages":"397","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"398","messages":"399","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"400","messages":"401","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"402","messages":"403","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"404"},{"filePath":"405","messages":"406","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"407","messages":"408","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"409","messages":"410","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"411","messages":"412","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"413","messages":"414","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"415","messages":"416","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"417","messages":"418","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"419","messages":"420","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"421","messages":"422","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"423","messages":"424","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"425","messages":"426","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"427","messages":"428","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"429","messages":"430","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"431","messages":"432","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"433","messages":"434","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"435","messages":"436","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"437","messages":"438","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"439","messages":"440","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"441","messages":"442","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"443","messages":"444","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"445","messages":"446","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"447","messages":"448","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"449","messages":"450","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"451","messages":"452","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"453","messages":"454","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"455","messages":"456","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"457","messages":"458","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"459","messages":"460","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"461"},{"filePath":"462","messages":"463","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"464","messages":"465","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"466","messages":"467","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"468","messages":"469","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"470","messages":"471","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"472","messages":"473","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"474","messages":"475","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"476","messages":"477","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"478"},{"filePath":"479","messages":"480","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"481","messages":"482","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"483"},{"filePath":"484","messages":"485","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"486","messages":"487","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"488","messages":"489","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"490","messages":"491","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"492","messages":"493","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"494","messages":"495","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"496","messages":"497","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"498","messages":"499","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"500","messages":"501","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"502","messages":"503","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"504","messages":"505","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"506","messages":"507","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"508","messages":"509","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"510","messages":"511","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"512","messages":"513","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"514","messages":"515","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"516","messages":"517","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"518","messages":"519","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"520","messages":"521","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"522","messages":"523","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"524","messages":"525","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"526","messages":"527","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"528","messages":"529","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"530","messages":"531","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"532","messages":"533","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"534","messages":"535","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"536","messages":"537","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"538","messages":"539","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"540","messages":"541","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"542","messages":"543","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"544","messages":"545","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"546","messages":"547","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"548","messages":"549","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"550","messages":"551","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"552","messages":"553","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"554","messages":"555","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"556","messages":"557","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"558","messages":"559","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"560","messages":"561","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"562","messages":"563","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"564","messages":"565","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"566","messages":"567","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"568","messages":"569","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"570","messages":"571","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"572","messages":"573","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"574","messages":"575","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"576","messages":"577","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"578","messages":"579","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"580","messages":"581","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"582","messages":"583","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"584","messages":"585","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"586","messages":"587","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"588","messages":"589","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"590","messages":"591","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"592","messages":"593","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"594","messages":"595","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"596","messages":"597","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"598","messages":"599","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"600","messages":"601","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"602","messages":"603","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"604","messages":"605","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"606","messages":"607","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"608","messages":"609","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"610","messages":"611","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"612","messages":"613","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"614","messages":"615","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"616","messages":"617","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"618","messages":"619","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"620","messages":"621","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"622","messages":"623","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"624","messages":"625","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"626","messages":"627","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"628","messages":"629","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"630","messages":"631","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"632","messages":"633","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"634","messages":"635","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"636","messages":"637","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"638","messages":"639","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"640","messages":"641","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"642","messages":"643","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"644","messages":"645","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"646","messages":"647","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"648","messages":"649","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"650","messages":"651","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"652","messages":"653","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"654","messages":"655","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"656","messages":"657","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"658","messages":"659","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"660","messages":"661","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"662","messages":"663","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"664","messages":"665","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"666","messages":"667","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"668","messages":"669","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"670","messages":"671","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"672","messages":"673","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"674","messages":"675","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"676","messages":"677","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"678","messages":"679","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"680","messages":"681","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"682","messages":"683","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"684","messages":"685","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"686","messages":"687","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"688","messages":"689","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"690","messages":"691","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"692","messages":"693","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"694","messages":"695","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"696","messages":"697","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"698","messages":"699","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"700","messages":"701","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"702","messages":"703","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"704","messages":"705","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"706","messages":"707","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"708","messages":"709","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/rollup.config.js",[],"/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/abis/types/ArgentWalletDetector.d.ts",[],"/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/abis/types/Eip2612.d.ts",[],"/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/abis/types/EnsPublicResolver.d.ts",[],"/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/abis/types/EnsRegistrar.d.ts",[],"/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/abis/types/Erc20.d.ts",[],"/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/abis/types/Erc20Bytes32.d.ts",[],"/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/abis/types/Multicall.d.ts",[],"/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/abis/types/Multicall2.d.ts",[],"/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/abis/types/Unisocks.d.ts",[],"/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/abis/types/Weth.d.ts",[],"/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/abis/types/commons.ts",[],"/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/abis/types/index.ts",[],"/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/components/Button/index.tsx",[],"/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/components/Card/index.tsx",[],"/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/components/Column/index.tsx",[],"/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/components/CurrencyInputPanel/FiatValue.tsx",[],"/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/components/CurrencyInputPanel/RatePercentage.tsx",[],"/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/components/CurrencyInputPanel/index.tsx",[],"/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/components/CurrencyLogo/index.tsx",[],"/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/components/DoubleLogo/index.tsx",[],"/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/components/GelatoLimitOrder/AppBody.tsx",[],"/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/components/GelatoLimitOrder/index.tsx",[],"/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/components/GelatoStopLimitOrder/AppBody.tsx",[],"/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/components/GelatoStopLimitOrder/index.tsx",["710","711"],"/* eslint-disable @typescript-eslint/no-non-null-assertion */\nimport {\n  Currency,\n  CurrencyAmount,\n  Percent,\n  TradeType,\n} from \"@uniswap/sdk-core\";\nimport { Trade } from \"@uniswap/v2-sdk\";\nimport { AdvancedSwapDetails } from \"../order/AdvancedSwapDetails\";\nimport UnsupportedCurrencyFooter from \"../order/UnsupportedCurrencyFooter\";\nimport { MouseoverTooltip, MouseoverTooltipContent } from \"../Tooltip\";\nimport React, { useCallback, useState, Fragment, useEffect } from \"react\";\nimport {\n  ArrowDown,\n  Info,\n  Divide,\n  X,\n  CheckCircle,\n  HelpCircle,\n} from \"react-feather\";\nimport { Text } from \"rebass\";\nimport styled from \"styled-components\";\nimport {\n  ButtonConfirmed,\n  ButtonError,\n  ButtonLight,\n  ButtonPrimary,\n} from \"../Button\";\nimport { GreyCard } from \"../Card\";\nimport { AutoColumn } from \"../Column\";\nimport CurrencyInputPanel from \"../CurrencyInputPanel\";\nimport Row, { AutoRow, RowFixed } from \"../Row\";\nimport ConfirmSwapModal from \"../order/ConfirmSwapModal\";\nimport {\n  ArrowWrapper,\n  BottomGrouping,\n  Dots,\n  SwapCallbackError,\n  Wrapper,\n} from \"../order/styleds\";\nimport SwapHeader from \"../order/SwapHeader\";\nimport TradePrice from \"../order/TradePrice\";\nimport { useGelatoStopLimitOrders } from \"../../hooks/gelato\";\nimport { useIsSwapUnsupported } from \"../../hooks/useIsSwapUnsupported\";\nimport { useUSDCValue } from \"../../hooks/useUSDCPrice\";\nimport { Field } from \"../../state/gorder/actions\";\nimport { tryParseAmount } from \"../../state/gorder/hooks\";\nimport { maxAmountSpend } from \"../../utils/maxAmountSpend\";\nimport AppBody from \"./AppBody\";\nimport { ExternalLink, TYPE } from \"../../theme\";\nimport { useWeb3 } from \"../../web3\";\nimport useTheme from \"../../hooks/useTheme\";\nimport useGasOverhead from \"../../hooks/useGasOverhead\";\nimport PoweredByGelato from \"../../assets/svg/poweredbygelato_transparent.svg\";\nimport {\n  ApprovalState,\n  useApproveCallbackFromInputCurrencyAmount,\n} from \"../../hooks/useApproveCallback\";\nimport Loader from \"../Loader\";\nimport CurrencyLogo from \"../CurrencyLogo\";\nimport { NATIVE } from \"../../constants/addresses\";\nimport Slippage from \"../order/Slippage\";\n\nconst StyledInfo = styled(Info)`\n  opacity: 0.4;\n  color: ${({ theme }) => theme.text1};\n  height: 16px;\n  width: 16px;\n  :hover {\n    opacity: 0.8;\n  }\n`;\n\nenum Rate {\n  DIV = \"DIV\",\n  MUL = \"MUL\",\n}\n\nconst PoweredByWrapper = styled(PoweredByGelato)<{ size: number }>`\n  ${({ theme }) => theme.flexColumnNoWrap};\n  height: ${() => \"26px\"};\n  width: ${({ size }) => (size ? size + \"px\" : \"32px\")};\n  background-color: ${({ theme }) => theme.bg1};\n  & > img,\n  ${({ theme }) => theme.mediaWidth.upToMedium`\n    align-items: flex-end;\n  `};\n  border-radius: 0.5rem;       \n  margin-left: 0.25rem;\n`;\n\ninterface GelatoStopLimitOrderProps {\n  showCommonBases?: boolean;\n}\n\nexport default function GelatoStopLimitOrder({\n  showCommonBases = true,\n}: GelatoStopLimitOrderProps) {\n  const { account, toggleWalletModal } = useWeb3();\n\n  const theme = useTheme();\n\n  const recipient = account ?? null;\n\n  const {\n    handlers: {\n      handleInput,\n      handleCurrencySelection,\n      handleSwitchTokens,\n      handleStopLimitOrderSubmission,\n      handleSlippage,\n    },\n    derivedOrderInfo: {\n      parsedAmounts,\n      currencies,\n      currencyBalances,\n      trade,\n      formattedAmounts,\n      inputError,\n      rawAmounts,\n      price,\n      slippage,\n    },\n    orderState: { independentField, rateType },\n  } = useGelatoStopLimitOrders();\n\n  const fiatValueInput = useUSDCValue(parsedAmounts.input);\n\n  const desiredRateInCurrencyAmount = tryParseAmount(\n    trade?.outputAmount.toSignificant(6),\n    currencies.output\n  );\n\n  const fiatValueDesiredRate = useUSDCValue(desiredRateInCurrencyAmount);\n\n  const currentMarketRate = trade?.executionPrice ?? undefined;\n\n  const pct =\n    currentMarketRate && price\n      ? price.subtract(currentMarketRate).divide(currentMarketRate)\n      : undefined;\n\n  const percentageRateDifference = pct\n    ? new Percent(pct.numerator, pct.denominator)\n    : undefined;\n\n  const isValid = !inputError;\n\n  const handleTypeInput = useCallback(\n    (value: string) => {\n      handleInput(Field.INPUT, value);\n    },\n    [handleInput]\n  );\n  const handleTypeOutput = useCallback(\n    (value: string) => {\n      handleInput(Field.OUTPUT, value);\n    },\n    [handleInput]\n  );\n  const handleTypeDesiredRate = useCallback(\n    (value: string) => {\n      handleInput(Field.PRICE, value);\n    },\n    [handleInput]\n  );\n\n  // modal and loading\n  const [\n    { showConfirm, tradeToConfirm, swapErrorMessage, attemptingTxn, txHash },\n    setSwapState,\n  ] = useState<{\n    showConfirm: boolean;\n    tradeToConfirm: Trade<Currency, Currency, TradeType> | undefined;\n    attemptingTxn: boolean;\n    swapErrorMessage: string | undefined;\n    txHash: string | undefined;\n  }>({\n    showConfirm: false,\n    tradeToConfirm: undefined,\n    attemptingTxn: false,\n    swapErrorMessage: undefined,\n    txHash: undefined,\n  });\n\n  const [\n    approvalState,\n    approveCallback,\n  ] = useApproveCallbackFromInputCurrencyAmount(parsedAmounts.input);\n\n  // check if user has gone through approval process, used to show two step buttons, reset on token change\n  const [approvalSubmitted, setApprovalSubmitted] = useState<boolean>(false);\n\n  // mark when a user has submitted an approval, reset onTokenSelection for input field\n  useEffect(() => {\n    if (approvalState === ApprovalState.PENDING) {\n      setApprovalSubmitted(true);\n    }\n  }, [approvalState, approvalSubmitted]);\n\n  const allowedSlippage = new Percent(slippage, 10_000);\n  const userHasSpecifiedInputOutput = Boolean(\n    (independentField === Field.INPUT || independentField === Field.OUTPUT) &&\n      currencies.input &&\n      currencies.output\n  );\n  const routeNotFound = !trade?.route;\n  const isLoadingRoute =\n    parsedAmounts.input &&\n    !parsedAmounts.output &&\n    currencies.input &&\n    currencies.output;\n\n  const maxInputAmount: CurrencyAmount<Currency> | undefined = maxAmountSpend(\n    currencyBalances.input\n  );\n  const showMaxButton = Boolean(\n    maxInputAmount?.greaterThan(0) &&\n      !parsedAmounts.input?.equalTo(maxInputAmount)\n  );\n\n  const handleSwap = useCallback(() => {\n    if (!handleStopLimitOrderSubmission) {\n      return;\n    }\n\n    setSwapState({\n      attemptingTxn: true,\n      tradeToConfirm,\n      showConfirm,\n      swapErrorMessage: undefined,\n      txHash: undefined,\n    });\n\n    try {\n      if (!currencies.input?.wrapped.address) {\n        throw new Error(\"Invalid input currency\");\n      }\n\n      if (!currencies.output?.wrapped.address) {\n        throw new Error(\"Invalid output currency\");\n      }\n\n      if (!rawAmounts.input) {\n        throw new Error(\"Invalid input amount\");\n      }\n\n      if (!rawAmounts.output) {\n        throw new Error(\"Invalid output amount\");\n      }\n\n      if (!account) {\n        throw new Error(\"No account\");\n      }\n\n      handleStopLimitOrderSubmission({\n        inputToken: currencies.input?.isNative\n          ? NATIVE\n          : currencies.input?.wrapped.address,\n        outputToken: currencies.output?.isNative\n          ? NATIVE\n          : currencies.output?.wrapped.address,\n        inputAmount: rawAmounts.input,\n        outputAmount: rawAmounts.output,\n        slippage,\n        owner: account,\n      })\n        .then(({ hash }) => {\n          setSwapState({\n            attemptingTxn: false,\n            tradeToConfirm,\n            showConfirm,\n            swapErrorMessage: undefined,\n            txHash: hash,\n          });\n        })\n        .catch((error) => {\n          setSwapState({\n            attemptingTxn: false,\n            tradeToConfirm,\n            showConfirm,\n            swapErrorMessage: error.message,\n            txHash: undefined,\n          });\n        });\n    } catch (error: any) {\n      setSwapState({\n        attemptingTxn: false,\n        tradeToConfirm,\n        showConfirm,\n        swapErrorMessage: error.message,\n        txHash: undefined,\n      });\n    }\n  }, [\n    handleStopLimitOrderSubmission,\n    tradeToConfirm,\n    showConfirm,\n    currencies.input?.wrapped.address,\n    currencies.input?.isNative,\n    currencies.output?.wrapped.address,\n    currencies.output?.isNative,\n    rawAmounts.input,\n    rawAmounts.output,\n    account,\n  ]);\n\n  const [showInverted, setShowInverted] = useState<boolean>(false);\n\n  const handleConfirmDismiss = useCallback(() => {\n    setSwapState({\n      showConfirm: false,\n      tradeToConfirm,\n      attemptingTxn,\n      swapErrorMessage,\n      txHash,\n    });\n    // if there was a tx hash, we want to clear the input\n    if (txHash) {\n      handleInput(Field.INPUT, \"\");\n    }\n  }, [attemptingTxn, handleInput, swapErrorMessage, tradeToConfirm, txHash]);\n\n  const handleAcceptChanges = useCallback(() => {\n    setSwapState({\n      tradeToConfirm: trade as any,\n      swapErrorMessage,\n      txHash,\n      attemptingTxn,\n      showConfirm,\n    });\n  }, [attemptingTxn, showConfirm, swapErrorMessage, trade, txHash]);\n\n  const handleInputSelect = useCallback(\n    (inputCurrency) => {\n      //  setApprovalSubmitted(false); // reset 2 step UI for approvals\n      handleCurrencySelection(Field.INPUT, inputCurrency);\n    },\n    [handleCurrencySelection]\n  );\n\n  const handleMaxInput = useCallback(() => {\n    maxInputAmount && handleInput(Field.INPUT, maxInputAmount.toExact());\n  }, [maxInputAmount, handleInput]);\n\n  const handleOutputSelect = useCallback(\n    (outputCurrency) => handleCurrencySelection(Field.OUTPUT, outputCurrency),\n    [handleCurrencySelection]\n  );\n\n  const swapIsUnsupported = useIsSwapUnsupported(\n    currencies?.input,\n    currencies?.output\n  );\n\n  const {\n    gasPrice,\n    realExecutionPrice,\n    realExecutionPriceAsString,\n  } = useGasOverhead(parsedAmounts.input, parsedAmounts.output, rateType);\n\n  const showApproveFlow =\n    !inputError &&\n    (approvalState === ApprovalState.NOT_APPROVED ||\n      approvalState === ApprovalState.PENDING ||\n      (approvalSubmitted && approvalState === ApprovalState.APPROVED));\n\n  const handleApprove = useCallback(async () => {\n    await approveCallback();\n  }, [approveCallback]);\n\n  const [activeTab, setActiveTab] = useState(1);\n  const [slippageValue, setSlippage] = useState(\"2\");\n\n  const handleSlippageInput = (value: string) => {\n    handleSlippage(value);\n    setSlippage(value);\n  };\n\n  useEffect(() => {\n    setActiveTab(1);\n    handleSlippageInput(\"2\");\n  }, []);\n\n  return (\n    <Fragment>\n      <AppBody>\n        <SwapHeader type={\"stoplimit\"} />\n        <Wrapper id=\"limit-order-page\">\n          <ConfirmSwapModal\n            isOpen={showConfirm}\n            trade={trade}\n            originalTrade={tradeToConfirm}\n            onAcceptChanges={handleAcceptChanges}\n            attemptingTxn={attemptingTxn}\n            txHash={txHash}\n            recipient={recipient}\n            allowedSlippage={allowedSlippage}\n            onConfirm={handleSwap}\n            swapErrorMessage={swapErrorMessage}\n            onDismiss={handleConfirmDismiss}\n            inputAmount={parsedAmounts.input}\n            outputAmount={parsedAmounts.output}\n            type={\"stop\"}\n          />\n\n          <AutoColumn gap={\"md\"}>\n            <div style={{ display: \"relative\" }}>\n              <CurrencyInputPanel\n                label={\n                  independentField === Field.OUTPUT ? \"From (at most)\" : \"From\"\n                }\n                value={formattedAmounts.input}\n                showMaxButton={showMaxButton}\n                currency={currencies.input}\n                onUserInput={handleTypeInput}\n                onMax={handleMaxInput}\n                fiatValue={fiatValueInput ?? undefined}\n                onCurrencySelect={handleInputSelect}\n                otherCurrency={currencies.output}\n                showCommonBases={showCommonBases}\n                id=\"limit-order-currency-input\"\n              />\n              <ArrowWrapper clickable={false}>\n                {rateType === Rate.MUL ? (\n                  <X\n                    size=\"16\"\n                    color={\n                      currencies.input && currencies.output\n                        ? theme.text1\n                        : theme.text3\n                    }\n                  />\n                ) : (\n                  <Divide\n                    size=\"16\"\n                    color={\n                      currencies.input && currencies.output\n                        ? theme.text1\n                        : theme.text3\n                    }\n                  />\n                )}\n              </ArrowWrapper>\n              <CurrencyInputPanel\n                value={formattedAmounts.price}\n                showMaxButton={showMaxButton}\n                currency={currencies.input}\n                onUserInput={handleTypeDesiredRate}\n                fiatValue={fiatValueDesiredRate ?? undefined}\n                onCurrencySelect={handleInputSelect}\n                otherCurrency={currencies.output}\n                showCommonBases={showCommonBases}\n                id=\"limit-order-currency-rate\"\n                showCurrencySelector={false}\n                hideBalance={true}\n                showRate={true}\n                isInvertedRate={rateType === Rate.MUL ? false : true}\n                gasPrice={gasPrice}\n                realExecutionPrice={realExecutionPrice ?? undefined}\n                realExecutionPriceAsString={realExecutionPriceAsString}\n              />\n              <ArrowWrapper clickable>\n                <ArrowDown\n                  size=\"16\"\n                  onClick={() => {\n                    //   setApprovalSubmitted(false); // reset 2 step UI for approvals\n                    handleSwitchTokens();\n                  }}\n                  color={\n                    currencies.input && currencies.output\n                      ? theme.text1\n                      : theme.text3\n                  }\n                />\n              </ArrowWrapper>\n              <CurrencyInputPanel\n                value={formattedAmounts.output}\n                onUserInput={handleTypeOutput}\n                label={\n                  independentField === Field.INPUT ? \"To (at least)\" : \"To\"\n                }\n                showMaxButton={false}\n                hideBalance={false}\n                priceImpact={percentageRateDifference}\n                currency={currencies.output}\n                onCurrencySelect={handleOutputSelect}\n                otherCurrency={currencies.input}\n                showCommonBases={showCommonBases}\n                rateType={rateType}\n                id=\"limit-order-currency-output\"\n              />\n              <Row>\n                <Slippage\n                  handleActiveTab={setActiveTab}\n                  activeTab={activeTab}\n                  value={slippageValue}\n                  handleInput={handleSlippageInput}\n                />\n              </Row>\n            </div>\n\n            <Row\n              style={{ justifyContent: !trade ? \"center\" : \"space-between\" }}\n            >\n              <RowFixed>\n                <ExternalLink href={\"https://www.gelato.network\"}>\n                  <PoweredByWrapper size={126} />\n                </ExternalLink>\n              </RowFixed>\n              {trade ? (\n                <RowFixed>\n                  {/* Current market rate */}\n                  <TradePrice\n                    price={trade.executionPrice}\n                    showInverted={showInverted}\n                    setShowInverted={setShowInverted}\n                  />\n                  <MouseoverTooltipContent content={<AdvancedSwapDetails />}>\n                    <StyledInfo />\n                  </MouseoverTooltipContent>\n                </RowFixed>\n              ) : null}\n            </Row>\n\n            <BottomGrouping>\n              {swapIsUnsupported ? (\n                <ButtonPrimary disabled={true}>\n                  <TYPE.main mb=\"4px\">Unsupported Asset</TYPE.main>\n                </ButtonPrimary>\n              ) : !account ? (\n                <ButtonLight onClick={toggleWalletModal}>\n                  Connect Wallet\n                </ButtonLight>\n              ) : routeNotFound &&\n                userHasSpecifiedInputOutput &&\n                parsedAmounts.input ? (\n                <GreyCard style={{ textAlign: \"center\" }}>\n                  <TYPE.main mb=\"4px\">\n                    {isLoadingRoute ? (\n                      <Dots>Loading</Dots>\n                    ) : (\n                      `Insufficient liquidity for this trade.`\n                    )}\n                  </TYPE.main>\n                </GreyCard>\n              ) : showApproveFlow ? (\n                <AutoRow style={{ flexWrap: \"nowrap\", width: \"100%\" }}>\n                  <AutoColumn style={{ width: \"100%\" }} gap=\"12px\">\n                    <ButtonConfirmed\n                      onClick={handleApprove}\n                      disabled={\n                        approvalState !== ApprovalState.NOT_APPROVED ||\n                        approvalSubmitted\n                      }\n                      width=\"100%\"\n                      altDisabledStyle={approvalState === ApprovalState.PENDING} // show solid button while waiting\n                      confirmed={approvalState === ApprovalState.APPROVED}\n                    >\n                      <AutoRow\n                        justify=\"space-between\"\n                        style={{ flexWrap: \"nowrap\" }}\n                      >\n                        <span style={{ display: \"flex\", alignItems: \"center\" }}>\n                          <CurrencyLogo\n                            currency={currencies.input}\n                            size={\"20px\"}\n                            style={{ marginRight: \"8px\", flexShrink: 0 }}\n                          />\n                          {/* we need to shorten this string on mobile */}\n                          {approvalState === ApprovalState.APPROVED\n                            ? `You can now use your ${currencies.input?.symbol} to place orders.`\n                            : `Allow the Gelato Stop Limit Orders to use your \n                              ${currencies.input?.symbol}`}\n                        </span>\n                        {approvalState === ApprovalState.PENDING ||\n                        (approvalSubmitted &&\n                          approvalState === ApprovalState.NOT_APPROVED) ? (\n                          <Loader stroke=\"white\" />\n                        ) : approvalSubmitted &&\n                          approvalState === ApprovalState.APPROVED ? (\n                          <CheckCircle size=\"20\" color={theme.green1} />\n                        ) : (\n                          <MouseoverTooltip\n                            text={`You must give the Gelato Stop Limit Orders smart contracts\n                                permission to use your \n                                ${currencies.input?.symbol}. You only have to do\n                                this once per token.`}\n                          >\n                            <HelpCircle\n                              size=\"20\"\n                              color={\"white\"}\n                              style={{ marginLeft: \"8px\" }}\n                            />\n                          </MouseoverTooltip>\n                        )}\n                      </AutoRow>\n                    </ButtonConfirmed>\n                    <ButtonError\n                      onClick={() => {\n                        setSwapState({\n                          tradeToConfirm: trade,\n                          attemptingTxn: false,\n                          swapErrorMessage: undefined,\n                          showConfirm: true,\n                          txHash: undefined,\n                        });\n                      }}\n                      id=\"limit-order-button\"\n                      disabled={\n                        !isValid || approvalState !== ApprovalState.APPROVED\n                      }\n                      error={false}\n                    >\n                      <Text fontSize={20} fontWeight={500}>\n                        {inputError ? inputError : `Place order`}\n                      </Text>\n                    </ButtonError>\n                  </AutoColumn>\n                </AutoRow>\n              ) : (\n                <ButtonError\n                  onClick={() => {\n                    setSwapState({\n                      tradeToConfirm: trade,\n                      attemptingTxn: false,\n                      swapErrorMessage: undefined,\n                      showConfirm: true,\n                      txHash: undefined,\n                    });\n                  }}\n                  id=\"limit-order-button\"\n                  disabled={!isValid}\n                  error={false}\n                >\n                  <Text fontSize={20} fontWeight={500}>\n                    {inputError ? inputError : `Place order`}\n                  </Text>\n                </ButtonError>\n              )}\n              {swapErrorMessage && isValid ? (\n                <SwapCallbackError error={swapErrorMessage} />\n              ) : null}\n            </BottomGrouping>\n          </AutoColumn>\n        </Wrapper>\n      </AppBody>\n\n      {!swapIsUnsupported ? null : (\n        <UnsupportedCurrencyFooter\n          show={swapIsUnsupported}\n          currencies={[currencies.input, currencies.output]}\n        />\n      )}\n    </Fragment>\n  );\n}\n","/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/components/HoverInlineText/index.tsx",[],"/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/components/LimitOrdersHistory/ConfirmCancellationModal.tsx",[],"/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/components/LimitOrdersHistory/OrderCard/index.tsx",[],"/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/components/LimitOrdersHistory/index.tsx",[],"/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/components/ListLogo/index.tsx",[],"/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/components/Loader/index.tsx",[],"/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/components/Logo/index.tsx",[],"/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/components/Modal/index.tsx",[],"/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/components/NumericalInput/index.tsx",[],"/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/components/Popover/index.tsx",[],"/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/components/QuestionHelper/index.tsx",[],"/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/components/Row/index.tsx",[],"/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/components/SearchModal/CommonBases.tsx",[],"/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/components/SearchModal/CurrencyList.tsx",[],"/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/components/SearchModal/CurrencySearch.tsx",[],"/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/components/SearchModal/CurrencySearchModal.tsx",[],"/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/components/SearchModal/ImportList.tsx",[],"/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/components/SearchModal/ImportRow.tsx",[],"/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/components/SearchModal/ImportToken.tsx",[],"/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/components/SearchModal/Manage.tsx",[],"/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/components/SearchModal/ManageLists.tsx",[],"/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/components/SearchModal/ManageTokens.tsx",[],"/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/components/SearchModal/SortButton.tsx",[],"/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/components/SearchModal/filtering.ts",[],"/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/components/SearchModal/sorting.ts",[],"/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/components/SearchModal/styleds.tsx",[],"/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/components/StopLimitOrdersHistory/ConfirmCancellationModal.tsx",[],"/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/components/StopLimitOrdersHistory/OrderCard/index.tsx",["712","713","714"],"import React, { useCallback, useMemo, useState } from \"react\";\nimport styled, { DefaultTheme } from \"styled-components/macro\";\nimport { darken } from \"polished\";\nimport { ArrowRight } from \"react-feather\";\nimport { Text } from \"rebass\";\nimport { RowBetween } from \"../../Row\";\nimport { Order } from \"@gelatonetwork/limit-orders-lib\";\nimport useTheme from \"../../../hooks/useTheme\";\nimport { useCurrency } from \"../../../hooks/Tokens\";\nimport CurrencyLogo from \"../../CurrencyLogo\";\nimport { useGelatoStopLimitOrdersHandlers } from \"../../../hooks/gelato\";\nimport { CurrencyAmount, Price } from \"@uniswap/sdk-core\";\nimport ConfirmCancellationModal from \"../ConfirmCancellationModal\";\nimport { useTradeExactIn } from \"../../../hooks/useTrade\";\nimport { Dots } from \"../../order/styleds\";\nimport { Rate } from \"../../../state/gorder/actions\";\nimport { isEthereumChain } from \"@gelatonetwork/limit-orders-lib/dist/utils\";\nimport { useWeb3 } from \"../../../web3\";\nimport { ButtonGray } from \"../../Button\";\nimport { useIsTransactionPending } from \"../../../state/gtransactions/hooks\";\nimport {\n  ExplorerDataType,\n  getExplorerLink,\n} from \"../../../utils/getExplorerLink\";\nimport TradePrice from \"../../order/TradePrice\";\nimport useGelatoStopLimitOrdersLib from \"../../../hooks/gelato/useGelatoStopLimitOrdersLib\";\nimport useGasOverhead from \"../../../hooks/useGasOverhead\";\nimport { MouseoverTooltip } from \"../../Tooltip\";\nimport { TYPE } from \"../../../theme\";\nimport HoverInlineText from \"../../HoverInlineText\";\nimport { formatUnits } from \"@ethersproject/units\";\n\nconst handleColorType = (status: string, theme: DefaultTheme) => {\n  switch (status) {\n    case \"open\":\n      return theme.blue1;\n    case \"executed\":\n      return theme.green1;\n    case \"cancelled\":\n      return theme.red1;\n\n    case \"pending\":\n      return theme.yellow1;\n\n    default:\n      return theme.text3;\n  }\n};\n\nconst OrderPanel = styled.div`\n  ${({ theme }) => theme.flexColumnNoWrap}\n  position: relative;\n  border-radius: \"16px\";\n  background-color: ${() => \"transparent\"};\n  z-index: 1;\n  width: \"100%\";\n`;\n\nconst Container = styled.div<{ hideInput: boolean }>`\n  border-radius: ${({ hideInput }) => (hideInput ? \"16px\" : \"20px\")};\n  border: 1px solid ${\" transparent\"};\n  background-color: ${({ theme }) => theme.bg1};\n  width: ${({ hideInput }) => (hideInput ? \"100%\" : \"initial\")};\n  :focus,\n  :hover {\n    border: 1px solid\n      ${({ theme, hideInput }) => (hideInput ? \" transparent\" : theme.bg3)};\n  }\n`;\n\nconst LabelRow = styled.div`\n  ${({ theme }) => theme.flexRowNoWrap}\n  align-items: center;\n  color: ${({ theme }) => theme.text1};\n  font-size: 0.75rem;\n  line-height: 1rem;\n  padding: 0 1rem 1rem;\n  span:hover {\n    cursor: pointer;\n    color: ${({ theme }) => darken(0.2, theme.text2)};\n  }\n`;\n\nconst Aligner = styled.span`\n  display: flex;\n  align-items: center;\n  justify-content: space-between;\n  width: 100%;\n`;\n\nconst StyledTokenName = styled.span<{ active?: boolean }>`\n  ${({ active }) =>\n    active\n      ? \"  margin: 0 0.25rem 0 0.25rem;\"\n      : \"  margin: 0 0.25rem 0 0.25rem;\"}\n  font-size:  ${({ active }) => (active ? \"14px\" : \"14px\")};\n`;\n\nconst OrderRow = styled(LabelRow)`\n  justify-content: flex-end;\n  margin-top: -8px;\n`;\n\nconst OrderStatus = styled.span<{ status: string; clickable: boolean }>`\n  font-size: 0.825rem;\n  font-weight: 600;\n  padding: 0.5rem;\n  border-radius: 8px;\n  cursor: ${({ clickable }) => (clickable ? \"pointer\" : \"default\")};\n  color: ${({ status, theme }) => handleColorType(status, theme)};\n  border: 1px solid ${({ status, theme }) => handleColorType(status, theme)};\n  width: fit-content;\n  justify-self: flex-end;\n  text-transform: uppercase;\n  :hover {\n    content: \"Reply!\";\n    border: 1px solid\n      ${({ status, theme, clickable }) =>\n        clickable\n          ? handleColorType(\"cancelled\", theme)\n          : handleColorType(status, theme)};\n\n    color: ${({ status, theme, clickable }) =>\n      clickable\n        ? handleColorType(\"cancelled\", theme)\n        : handleColorType(status, theme)};\n  }\n`;\n\nexport const ArrowWrapper = styled.div`\n  padding: 4px;\n  border-radius: 12px;\n  height: 32px;\n  width: 32px;\n  margin-right: 2px;\n  margin-left: -10px;\n  background-color: ${({ theme }) => theme.bg1};\n  border: 4px solid ${({ theme }) => theme.bg1};\n`;\n\nconst CurrencySelect = styled(ButtonGray)<{\n  selected: boolean;\n  hideInput?: boolean;\n}>`\n  align-items: center;\n  font-size: 24px;\n  font-weight: 500;\n  background-color: ${({ selected, theme }) =>\n    selected ? theme.bg0 : theme.primary1};\n  color: ${({ selected, theme }) => (selected ? theme.text1 : theme.white)};\n  border-radius: 16px;\n  box-shadow: ${({ selected }) =>\n    selected ? \"none\" : \"0px 6px 10px rgba(0, 0, 0, 0.075)\"};\n  box-shadow: 0px 6px 10px rgba(0, 0, 0, 0.075);\n  outline: none;\n  cursor: default;\n  user-select: none;\n  border: none;\n  height: ${({ hideInput }) => (hideInput ? \"2.8rem\" : \"2.4rem\")};\n  width: ${({ hideInput }) => (hideInput ? \"100%\" : \"initial\")};\n  padding: 0 8px;\n  justify-content: space-between;\n  margin-right: ${({ hideInput }) => (hideInput ? \"0\" : \"12px\")};\n  &:focus {\n    box-shadow: 0px 6px 10px rgba(0, 0, 0, 0.075);\n    background-color: ${({ selected, theme }) =>\n      selected ? theme.bg0 : theme.primary1};\n  }\n  :hover {\n    background-color: ${({ selected, theme }) =>\n      selected ? theme.bg0 : theme.primary1};\n  }\n`;\n\nconst Spacer = styled.div`\n  flex: 1 1 auto;\n`;\n\nexport default function OrderCard({ order }: { order: Order }) {\n  const theme = useTheme();\n\n  const { chainId, handler } = useWeb3();\n\n  const [\n    showExecutionPriceInverted,\n    setShowExecutionPriceInverted,\n  ] = useState<boolean>(false);\n  const [\n    showEthereumExecutionPriceInverted,\n    setShowEthereumExecutionPriceInverted,\n  ] = useState<boolean>(true);\n  const [\n    showCurrentPriceInverted,\n    setShowCurrentPriceInverted,\n  ] = useState<boolean>(true);\n\n  const {\n    handleStopLimitOrderCancellation,\n  } = useGelatoStopLimitOrdersHandlers();\n\n  const gelatoLibrary = useGelatoStopLimitOrdersLib();\n\n  const inputToken = useCurrency(order.inputToken);\n  const outputToken = useCurrency(order.outputToken);\n\n  const inputAmount = useMemo(\n    () =>\n      inputToken && order.inputAmount\n        ? CurrencyAmount.fromRawAmount(inputToken, order.inputAmount)\n        : undefined,\n    [inputToken, order.inputAmount]\n  );\n\n  const isEthereum = isEthereumChain(chainId ?? 1);\n\n  const rawMinReturn = useMemo(() => order.minReturn, [\n    chainId,\n    gelatoLibrary,\n    order.minReturn,\n    isEthereum,\n  ]);\n\n  const rawMaxReturn = useMemo(() => order.maxReturn, [\n    chainId,\n    gelatoLibrary,\n    order.maxReturn,\n    isEthereum,\n  ]);\n\n  const maxOutputAmount = useMemo(\n    () =>\n      outputToken && rawMaxReturn\n        ? CurrencyAmount.fromRawAmount(outputToken, rawMaxReturn)\n        : undefined,\n    [outputToken, rawMaxReturn]\n  );\n\n  const outputAmount = useMemo(\n    () =>\n      outputToken && rawMinReturn\n        ? CurrencyAmount.fromRawAmount(outputToken, rawMinReturn)\n        : undefined,\n    [outputToken, rawMinReturn]\n  );\n\n  const {\n    gasPrice,\n    realExecutionPrice: ethereumExecutionPrice,\n  } = useGasOverhead(inputAmount, outputAmount, Rate.MUL);\n\n  const executionPrice = useMemo(\n    () =>\n      outputAmount && outputAmount.greaterThan(0) && inputAmount\n        ? new Price({\n            baseAmount: outputAmount,\n            quoteAmount: inputAmount,\n          })\n        : undefined,\n    [inputAmount, outputAmount]\n  );\n\n  const maxPrice = useMemo(\n    () =>\n      maxOutputAmount && maxOutputAmount.greaterThan(0) && inputAmount\n        ? new Price({\n            baseAmount: maxOutputAmount,\n            quoteAmount: inputAmount,\n          })\n        : undefined,\n    [inputAmount, maxOutputAmount]\n  );\n\n  const trade = useTradeExactIn(inputAmount, outputToken ?? undefined, handler);\n\n  const isSubmissionPending = useIsTransactionPending(order.createdTxHash);\n  const isCancellationPending = useIsTransactionPending(\n    order.cancelledTxHash ?? undefined\n  );\n\n  // modal and loading\n  const [\n    { showConfirm, cancellationErrorMessage, attemptingTxn, txHash },\n    setCancellationState,\n  ] = useState<{\n    showConfirm: boolean;\n    attemptingTxn: boolean;\n    cancellationErrorMessage: string | undefined;\n    txHash: string | undefined;\n  }>({\n    showConfirm: false,\n    attemptingTxn: false,\n    cancellationErrorMessage: undefined,\n    txHash: undefined,\n  });\n\n  const handleConfirmDismiss = useCallback(() => {\n    setCancellationState({\n      showConfirm: false,\n      attemptingTxn,\n      cancellationErrorMessage,\n      txHash,\n    });\n  }, [attemptingTxn, cancellationErrorMessage, txHash]);\n\n  const handleCancellation = useCallback(() => {\n    if (!handleStopLimitOrderCancellation) {\n      return;\n    }\n\n    setCancellationState({\n      attemptingTxn: true,\n      showConfirm,\n      cancellationErrorMessage: undefined,\n      txHash: undefined,\n    });\n\n    const orderDetails =\n      inputToken?.symbol && outputToken?.symbol && inputAmount && outputAmount\n        ? {\n            inputTokenSymbol: inputToken.symbol,\n            outputTokenSymbol: outputToken.symbol,\n            inputAmount: inputAmount.toSignificant(4),\n            outputAmount: outputAmount.toSignificant(4),\n            maxOutputAmount,\n          }\n        : undefined;\n\n    handleStopLimitOrderCancellation(order, orderDetails)\n      .then(({ hash }) => {\n        setCancellationState({\n          attemptingTxn: false,\n          showConfirm,\n          cancellationErrorMessage: undefined,\n          txHash: hash,\n        });\n      })\n      .catch((error) => {\n        setCancellationState({\n          attemptingTxn: false,\n          showConfirm,\n          cancellationErrorMessage: error.message,\n          txHash: undefined,\n        });\n      });\n  }, [\n    handleStopLimitOrderCancellation,\n    showConfirm,\n    inputToken,\n    outputToken,\n    inputAmount,\n    outputAmount,\n    order,\n  ]);\n\n  const OrderCard = ({\n    showStatusButton = true,\n  }: {\n    showStatusButton?: boolean;\n  }) => (\n    <OrderPanel>\n      <Container hideInput={true}>\n        <RowBetween padding=\"10px\">\n          {inputToken ? (\n            <CurrencySelect selected={true}>\n              <Aligner>\n                <CurrencyLogo\n                  currency={inputToken ?? undefined}\n                  size={\"18px\"}\n                />\n                <StyledTokenName>\n                  {inputToken?.name ?? <Dots />}\n                </StyledTokenName>\n              </Aligner>\n            </CurrencySelect>\n          ) : (\n            <Dots />\n          )}\n          <ArrowWrapper>\n            <ArrowRight size=\"16\" color={theme.text1} />\n          </ArrowWrapper>\n          {outputToken ? (\n            <CurrencySelect selected={true}>\n              <Aligner>\n                <CurrencyLogo\n                  currency={outputToken ?? undefined}\n                  size={\"18px\"}\n                />\n                <StyledTokenName>\n                  {outputToken.name ?? <Dots />}\n                </StyledTokenName>\n              </Aligner>\n            </CurrencySelect>\n          ) : (\n            <Dots />\n          )}\n          <Spacer />\n          {showStatusButton ? (\n            <OrderStatus\n              clickable={true}\n              onClick={() => {\n                if (!chainId) return;\n\n                if (order.status === \"open\" && !isSubmissionPending)\n                  setCancellationState({\n                    attemptingTxn: false,\n                    cancellationErrorMessage: undefined,\n                    showConfirm: true,\n                    txHash: undefined,\n                  });\n                else if (order.status === \"open\" && isSubmissionPending)\n                  window.open(\n                    getExplorerLink(\n                      chainId,\n                      order.createdTxHash,\n                      ExplorerDataType.TRANSACTION\n                    ),\n                    \"_blank\"\n                  );\n                else if (order.status === \"cancelled\" && order.cancelledTxHash)\n                  window.open(\n                    getExplorerLink(\n                      chainId,\n                      order.cancelledTxHash,\n                      ExplorerDataType.TRANSACTION\n                    ),\n                    \"_blank\"\n                  );\n                else if (order.status === \"executed\" && order.executedTxHash)\n                  window.open(\n                    getExplorerLink(\n                      chainId,\n                      order.executedTxHash,\n                      ExplorerDataType.TRANSACTION\n                    ),\n                    \"_blank\"\n                  );\n              }}\n              status={\n                isCancellationPending || isSubmissionPending\n                  ? \"pending\"\n                  : order.status\n              }\n            >\n              {isSubmissionPending\n                ? \"pending\"\n                : isCancellationPending\n                ? \"cancelling\"\n                : order.status === \"open\"\n                ? \"cancel\"\n                : order.status}\n              {isSubmissionPending || isCancellationPending ? <Dots /> : null}\n            </OrderStatus>\n          ) : null}\n        </RowBetween>\n\n        <Aligner style={{ marginTop: \"10px\" }}>\n          <OrderRow>\n            <RowBetween>\n              <Text fontWeight={500} fontSize={14} color={theme.text1}>\n                {`Sell ${inputAmount ? inputAmount.toSignificant(4) : \"-\"} ${\n                  inputAmount?.currency.symbol ?? \"\"\n                } for ${outputAmount ? outputAmount.toSignificant(4) : \"-\"} ${\n                  outputAmount?.currency.symbol ?? \"\"\n                }`}\n              </Text>\n            </RowBetween>\n          </OrderRow>\n        </Aligner>\n        <Aligner\n          style={{\n            marginTop: \"-2px\",\n            marginBottom: order.status === \"open\" ? \"1px\" : \"20px\",\n          }}\n        >\n          <OrderRow>\n            <RowBetween>\n              <Text\n                fontWeight={400}\n                fontSize={12}\n                color={theme.text1}\n                style={{ marginRight: \"4px\", marginTop: \"2px\" }}\n              >\n                Current price:\n              </Text>\n              {trade ? (\n                <TradePrice\n                  price={trade.executionPrice}\n                  showInverted={showCurrentPriceInverted}\n                  setShowInverted={setShowCurrentPriceInverted}\n                  fontWeight={500}\n                  fontSize={12}\n                />\n              ) : (\n                <Dots />\n              )}\n            </RowBetween>\n          </OrderRow>\n        </Aligner>\n\n        {order.status === \"open\" ? (\n          <>\n            <Aligner style={{ marginTop: \"-10px\" }}>\n              <OrderRow>\n                <RowBetween>\n                  <Text\n                    fontWeight={400}\n                    fontSize={12}\n                    color={theme.text1}\n                    style={{ marginRight: \"4px\", marginTop: \"2px\" }}\n                  >\n                    Maximum Execution price:\n                  </Text>\n                  {maxPrice ? (\n                    <TradePrice\n                      price={maxPrice}\n                      showInverted={showExecutionPriceInverted}\n                      setShowInverted={setShowExecutionPriceInverted}\n                      fontWeight={500}\n                      fontSize={12}\n                    />\n                  ) : (\n                    <Dots />\n                  )}\n                </RowBetween>\n              </OrderRow>\n            </Aligner>\n            <Aligner style={{ marginTop: \"-10px\" }}>\n              <OrderRow>\n                <RowBetween>\n                  <Text\n                    fontWeight={400}\n                    fontSize={12}\n                    color={theme.text1}\n                    style={{ marginRight: \"4px\", marginTop: \"2px\" }}\n                  >\n                    Minimum Execution price:\n                  </Text>\n                  {executionPrice ? (\n                    isEthereum ? (\n                      <>\n                        <MouseoverTooltip\n                          text={`The execution price takes into account the gas necessary to execute your order and guarantees that your desired rate is fulfilled, so that the minimum you receive is ${\n                            outputAmount ? outputAmount.toSignificant(4) : \"-\"\n                          } ${\n                            outputAmount?.currency.symbol ?? \"\"\n                          }. It fluctuates according to gas prices. Current gas price: ${parseFloat(\n                            gasPrice ? formatUnits(gasPrice, \"gwei\") : \"-\"\n                          ).toFixed(0)} GWEI.`}\n                        >\n                          {ethereumExecutionPrice ? (\n                            <TradePrice\n                              price={ethereumExecutionPrice}\n                              showInverted={showEthereumExecutionPriceInverted}\n                              setShowInverted={\n                                setShowEthereumExecutionPriceInverted\n                              }\n                              fontWeight={500}\n                              fontSize={12}\n                            />\n                          ) : ethereumExecutionPrice === undefined ? (\n                            <TYPE.body fontSize={14} color={theme.text2}>\n                              <HoverInlineText text={\"never executes\"} />\n                            </TYPE.body>\n                          ) : (\n                            <Dots />\n                          )}\n                        </MouseoverTooltip>\n                      </>\n                    ) : (\n                      <TradePrice\n                        price={executionPrice}\n                        showInverted={showExecutionPriceInverted}\n                        setShowInverted={setShowExecutionPriceInverted}\n                        fontWeight={500}\n                        fontSize={12}\n                      />\n                    )\n                  ) : (\n                    <Dots />\n                  )}\n                </RowBetween>\n              </OrderRow>\n            </Aligner>\n          </>\n        ) : null}\n      </Container>\n    </OrderPanel>\n  );\n\n  return (\n    <>\n      <ConfirmCancellationModal\n        isOpen={showConfirm}\n        attemptingTxn={attemptingTxn}\n        txHash={txHash}\n        onConfirm={handleCancellation}\n        swapErrorMessage={cancellationErrorMessage}\n        onDismiss={handleConfirmDismiss}\n        topContent={() => (\n          <>\n            <br />\n            <OrderCard showStatusButton={false} />\n          </>\n        )}\n      />\n      <OrderCard />\n    </>\n  );\n}\n","/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/components/StopLimitOrdersHistory/index.tsx",[],"/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/components/Toggle/ListToggle.tsx",[],"/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/components/Toggle/MultiToggle.tsx",[],"/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/components/Toggle/index.tsx",[],"/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/components/TokenWarningModal/index.tsx",[],"/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/components/Tooltip/index.tsx",[],"/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/components/TransactionConfirmationModal/index.tsx",[],"/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/components/order/AdvancedStopLimitSwapDetails.tsx",["715","716"],"/* eslint-disable @typescript-eslint/no-non-null-assertion */\nimport { GelatoStopLimitOrders, utils } from \"@gelatonetwork/limit-orders-lib\";\nimport { isEthereumChain } from \"@gelatonetwork/limit-orders-lib/dist/utils\";\nimport { CurrencyAmount } from \"@uniswap/sdk-core\";\nimport { formatUnits } from \"@ethersproject/units\";\nimport React, { useMemo } from \"react\";\nimport { useGelatoStopLimitOrders } from \"../../hooks/gelato\";\nimport useGelatoStopLimitOrdersLib from \"../../hooks/gelato/useGelatoStopLimitOrdersLib\";\nimport useGasOverhead from \"../../hooks/useGasOverhead\";\nimport useTheme from \"../../hooks/useTheme\";\nimport { Rate } from \"../../state/gorder/actions\";\nimport { TYPE } from \"../../theme\";\nimport { useWeb3 } from \"../../web3\";\nimport { AutoColumn } from \"../Column\";\nimport { RowBetween, RowFixed } from \"../Row\";\nimport { MouseoverTooltip } from \"../Tooltip\";\n\nexport function AdvancedStopLimitSwapDetails() {\n  const theme = useTheme();\n  const { chainId } = useWeb3();\n  const {\n    derivedOrderInfo: { parsedAmounts, rawAmounts, slippage },\n    orderState: { rateType },\n  } = useGelatoStopLimitOrders();\n\n  const library = useGelatoStopLimitOrdersLib();\n\n  const { gasPrice, realExecutionPriceAsString } = useGasOverhead(\n    parsedAmounts.input,\n    parsedAmounts.output,\n    rateType\n  );\n\n  const isInvertedRate = rateType === Rate.DIV;\n\n  const realExecutionRateWithSymbols = useMemo(\n    () =>\n      parsedAmounts.input?.currency &&\n      parsedAmounts.output?.currency &&\n      realExecutionPriceAsString\n        ? realExecutionPriceAsString === \"never executes\"\n          ? realExecutionPriceAsString\n          : `1 ${\n              isInvertedRate\n                ? parsedAmounts.output.currency.symbol\n                : parsedAmounts.input.currency.symbol\n            } = ${realExecutionPriceAsString} ${\n              isInvertedRate\n                ? parsedAmounts.input.currency.symbol\n                : parsedAmounts.output.currency.symbol\n            }`\n        : undefined,\n    [parsedAmounts, realExecutionPriceAsString, isInvertedRate]\n  );\n\n  const outputAmount = parsedAmounts.output;\n\n  const rawOutputAmount = rawAmounts.output ?? \"0\";\n\n  const { minReturn, slippagePercentage, gelatoFeePercentage } = useMemo(() => {\n    if (!outputAmount || !library || !chainId)\n      return {\n        minReturn: undefined,\n        slippagePercentage: undefined,\n        gelatoFeePercentage: undefined,\n      };\n\n    // if (utils.isEthereumChain(chainId))\n    //   return {\n    //     minReturn: outputAmount,\n    //     slippagePercentage: undefined,\n    //     gelatoFeePercentage: undefined,\n    //   };\n\n    const { minReturn } = library.getFeeAndSlippageAdjustedMinReturn(\n      rawOutputAmount,\n      slippage\n    );\n\n    const slippagePercentage = slippage / 100;\n    const gelatoFeePercentage = GelatoStopLimitOrders.gelatoFeeBPS / 100;\n\n    const minReturnParsed = CurrencyAmount.fromRawAmount(\n      outputAmount.currency,\n      minReturn\n    );\n\n    return {\n      minReturn: minReturnParsed,\n      slippagePercentage,\n      gelatoFeePercentage,\n    };\n  }, [outputAmount, chainId, library, rawOutputAmount]);\n\n  return !chainId ? null : (\n    <AutoColumn gap=\"8px\">\n      {!isEthereumChain(chainId) ? (\n        <>\n          <RowBetween>\n            <RowFixed>\n              <TYPE.black fontSize={12} fontWeight={400} color={theme.text2}>\n                Gelato Fee\n              </TYPE.black>\n            </RowFixed>\n            <TYPE.black textAlign=\"right\" fontSize={12} color={theme.text1}>\n              {gelatoFeePercentage ? `${gelatoFeePercentage}` : \"-\"}%\n            </TYPE.black>\n          </RowBetween>\n\n          <RowBetween>\n            <RowFixed>\n              <TYPE.black fontSize={12} fontWeight={400} color={theme.text2}>\n                Slippage\n              </TYPE.black>\n            </RowFixed>\n            <TYPE.black textAlign=\"right\" fontSize={12} color={theme.text1}>\n              {slippagePercentage ? `${slippagePercentage}` : \"-\"}%\n            </TYPE.black>\n          </RowBetween>\n        </>\n      ) : (\n        <>\n          <RowBetween>\n            <RowFixed>\n              <TYPE.black fontSize={12} fontWeight={400} color={theme.text2}>\n                Gas Price\n              </TYPE.black>\n            </RowFixed>\n            <TYPE.black textAlign=\"right\" fontSize={12} color={theme.text1}>\n              {gasPrice\n                ? `${parseFloat(formatUnits(gasPrice, \"gwei\")).toFixed(0)} GWEI`\n                : \"-\"}\n            </TYPE.black>\n          </RowBetween>\n          <RowBetween>\n            <RowFixed>\n              <MouseoverTooltip\n                text={`The actual execution price. Takes into account the gas necessary to execute your order and guarantees that your desired rate is fulfilled. It fluctuates according to gas prices. ${\n                  realExecutionRateWithSymbols\n                    ? `Assuming current gas price it should execute when ` +\n                      realExecutionRateWithSymbols +\n                      \".\"\n                    : \"\"\n                }`}\n              >\n                <TYPE.black fontSize={12} fontWeight={400} color={theme.text2}>\n                  Real Execution Price (?)\n                </TYPE.black>{\" \"}\n              </MouseoverTooltip>\n            </RowFixed>\n            <TYPE.black textAlign=\"right\" fontSize={12} color={theme.text1}>\n              {realExecutionRateWithSymbols\n                ? `${realExecutionRateWithSymbols}`\n                : \"-\"}\n            </TYPE.black>\n          </RowBetween>\n        </>\n      )}\n\n      <RowBetween>\n        <RowFixed>\n          <MouseoverTooltip\n            text={`The minimum amount you can receive. It includes all fees and maximum slippage tolerance.`}\n          >\n            <TYPE.black fontSize={12} fontWeight={400} color={theme.text2}>\n              Minimum Received (?)\n            </TYPE.black>\n          </MouseoverTooltip>\n        </RowFixed>\n        <TYPE.black textAlign=\"right\" fontSize={12} color={theme.text1}>\n          {minReturn\n            ? `${minReturn.toSignificant(4)} ${\n                outputAmount ? outputAmount.currency.symbol : \"-\"\n              }`\n            : \"-\"}\n        </TYPE.black>\n      </RowBetween>\n    </AutoColumn>\n  );\n}\n","/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/components/order/AdvancedSwapDetails.tsx",[],"/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/components/order/ConfirmSwapModal.tsx",["717"],"import {\n  Currency,\n  CurrencyAmount,\n  Percent,\n  TradeType,\n} from \"@uniswap/sdk-core\";\nimport { Trade } from \"@uniswap/v2-sdk\";\nimport React, { useCallback } from \"react\";\nimport TransactionConfirmationModal, {\n  ConfirmationModalContent,\n  TransactionErrorContent,\n} from \"../TransactionConfirmationModal\";\nimport SwapModalFooter from \"./SwapModalFooter\";\nimport SwapModalHeader from \"./SwapModalHeader\";\n\nexport default function ConfirmSwapModal({\n  trade,\n  onAcceptChanges,\n  onConfirm,\n  onDismiss,\n  recipient,\n  swapErrorMessage,\n  isOpen,\n  attemptingTxn,\n  txHash,\n  inputAmount,\n  outputAmount,\n  type,\n}: {\n  isOpen: boolean;\n  trade: Trade<Currency, Currency, TradeType> | undefined;\n  originalTrade: Trade<Currency, Currency, TradeType> | undefined;\n  attemptingTxn: boolean;\n  txHash: string | undefined;\n  recipient: string | null;\n  allowedSlippage: Percent;\n  onAcceptChanges: () => void;\n  onConfirm: () => void;\n  swapErrorMessage: string | undefined;\n  onDismiss: () => void;\n  inputAmount: CurrencyAmount<Currency> | undefined;\n  outputAmount: CurrencyAmount<Currency> | undefined;\n  type: \"limit\" | \"stop\";\n}) {\n  // const showAcceptChanges = useMemo(\n  //   () =>\n  //     Boolean(\n  //       trade instanceof Trade &&\n  //         originalTrade instanceof Trade &&\n  //         tradeMeaningfullyDiffers(trade, originalTrade)\n  //     ),\n  //   [originalTrade, trade]\n  // );\n  const showAcceptChanges = false;\n\n  const modalHeader = useCallback(() => {\n    return (\n      <SwapModalHeader\n        trade={trade}\n        recipient={recipient}\n        showAcceptChanges={false}\n        onAcceptChanges={onAcceptChanges}\n        type={type}\n      />\n    );\n  }, [onAcceptChanges, recipient, trade]);\n\n  const modalBottom = useCallback(() => {\n    return (\n      <SwapModalFooter\n        onConfirm={onConfirm}\n        trade={trade}\n        disabledConfirm={showAcceptChanges}\n        swapErrorMessage={swapErrorMessage}\n      />\n    );\n  }, [onConfirm, showAcceptChanges, swapErrorMessage, trade]);\n\n  // text to show while loading\n  const pendingText = `Submitting order to swap ${inputAmount?.toSignificant(\n    6\n  )} ${inputAmount?.currency?.symbol} for ${outputAmount?.toSignificant(6)} ${\n    outputAmount?.currency?.symbol\n  }`;\n\n  const confirmationContent = useCallback(\n    () =>\n      swapErrorMessage ? (\n        <TransactionErrorContent\n          onDismiss={onDismiss}\n          message={swapErrorMessage}\n        />\n      ) : (\n        <ConfirmationModalContent\n          title=\"Confirm Order\"\n          onDismiss={onDismiss}\n          topContent={modalHeader}\n          bottomContent={modalBottom}\n        />\n      ),\n    [onDismiss, modalBottom, modalHeader, swapErrorMessage]\n  );\n\n  return (\n    <TransactionConfirmationModal\n      isOpen={isOpen}\n      onDismiss={onDismiss}\n      attemptingTxn={attemptingTxn}\n      hash={txHash}\n      content={confirmationContent}\n      pendingText={pendingText}\n      currencyToAdd={trade?.outputAmount.currency}\n    />\n  );\n}\n","/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/components/order/FormattedPriceImpact.tsx",[],"/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/components/order/Slippage.tsx",[],"/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/components/order/SwapHeader.tsx",[],"/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/components/order/SwapModalFooter.tsx",[],"/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/components/order/SwapModalHeader.tsx",["718"],"/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/components/order/SwapRoute.tsx",[],"/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/components/order/TradePrice.tsx",[],"/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/components/order/UnsupportedCurrencyFooter.tsx",[],"/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/components/order/confirmPriceImpactWithoutFee.ts",[],"/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/components/order/styleds.tsx",[],"/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/constants/addresses.ts",[],"/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/constants/index.ts",[],"/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/constants/lists.ts",[],"/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/constants/misc.ts",[],"/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/constants/routing.ts",[],"/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/constants/tokens.avax.ts",[],"/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/constants/tokens.bsc.ts",[],"/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/constants/tokens.fantom.ts",[],"/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/constants/tokens.matic.ts",[],"/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/constants/tokens.ts",[],"/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/custom.d.ts",[],"/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/entities/errors.ts",[],"/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/entities/pair.ts",[],"/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/hooks/Balances.ts",[],"/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/hooks/Tokens.ts",[],"/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/hooks/gelato/index.ts",[],"/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/hooks/gelato/useGelatoLimitOrders.ts",[],"/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/hooks/gelato/useGelatoLimitOrdersHandlers.ts",[],"/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/hooks/gelato/useGelatoLimitOrdersHistory.ts",[],"/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/hooks/gelato/useGelatoLimitOrdersLib.ts",[],"/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/hooks/gelato/useGelatoStopLimitOrders.ts",[],"/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/hooks/gelato/useGelatoStopLimitOrdersHandlers.ts",[],"/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/hooks/gelato/useGelatoStopLimitOrdersHistory.ts",[],"/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/hooks/gelato/useGelatoStopLimitOrdersLib.ts",[],"/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/hooks/useAllCurrencyCombinations.ts",[],"/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/hooks/useApproveCallback.ts",[],"/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/hooks/useColor.ts",[],"/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/hooks/useContract.ts",[],"/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/hooks/useDebounce.ts",[],"/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/hooks/useDebouncedChangeHandler.tsx",[],"/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/hooks/useFetchListCallback.ts",[],"/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/hooks/useGasOverhead.ts",[],"/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/hooks/useGasPrice.ts",[],"/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/hooks/useHttpLocations.ts",[],"/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/hooks/useInterval.ts",[],"/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/hooks/useIsArgentWallet.ts",[],"/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/hooks/useIsSwapUnsupported.ts",[],"/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/hooks/useIsWindowVisible.ts",[],"/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/hooks/useLast.ts",[],"/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/hooks/useOnClickOutside.tsx",[],"/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/hooks/usePairs.ts",[],"/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/hooks/usePrevious.ts",[],"/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/hooks/useTheme.ts",[],"/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/hooks/useToggle.ts",[],"/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/hooks/useTokenAllowance.ts",[],"/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/hooks/useTrade.ts",[],"/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/hooks/useUSDCPrice.ts",[],"/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/hooks/useWindowSize.ts",[],"/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/index.tsx",[],"/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/state/gapplication/actions.ts",[],"/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/state/gapplication/hooks.ts",[],"/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/state/gapplication/reducer.ts",[],"/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/state/gapplication/updater.ts",[],"/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/state/glists/actions.ts",[],"/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/state/glists/hooks.ts",[],"/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/state/glists/reducer.ts",[],"/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/state/glists/updater.ts",[],"/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/state/glists/wrappedTokenInfo.ts",[],"/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/state/gmulticall/actions.ts",[],"/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/state/gmulticall/hooks.ts",[],"/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/state/gmulticall/reducer.ts",[],"/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/state/gmulticall/updater.tsx",[],"/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/state/gorder/actions.ts",[],"/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/state/gorder/hooks.ts",[],"/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/state/gorder/reducer.ts",[],"/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/state/gstoplimit/actions.ts",[],"/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/state/gstoplimit/hooks.ts",[],"/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/state/gstoplimit/reducer.ts",[],"/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/state/gtransactions/actions.ts",[],"/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/state/gtransactions/hooks.tsx",[],"/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/state/gtransactions/reducer.ts",[],"/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/state/gtransactions/updater.tsx",[],"/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/state/guser/actions.ts",[],"/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/state/guser/hooks.ts",[],"/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/state/guser/reducer.ts",[],"/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/state/index.ts",[],"/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/theme/components.tsx",[],"/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/theme/index.tsx",[],"/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/theme/styled.d.ts",[],"/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/types/index.ts",[],"/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/utils/chunkArray.ts",[],"/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/utils/computeFiatValuePriceImpact.tsx",[],"/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/utils/constructSameAddressMap.ts",[],"/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/utils/contenthashToUri.ts",[],"/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/utils/currencyId.ts",[],"/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/utils/formatTokenAmount.ts",[],"/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/utils/getExplorerLink.ts",[],"/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/utils/getTokenList.ts",[],"/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/utils/index.ts",[],"/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/utils/isTradeBetter.ts",[],"/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/utils/isZero.ts",[],"/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/utils/listVersionLabel.ts",[],"/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/utils/localStorageOrders.ts",[],"/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/utils/maxAmountSpend.ts",[],"/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/utils/pairs.ts",[],"/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/utils/parseENSAddress.ts",[],"/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/utils/prices.ts",[],"/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/utils/resolveENSContentHash.ts",[],"/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/utils/retry.ts",[],"/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/utils/supportedChainId.ts",[],"/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/utils/unwrappedToken.ts",[],"/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/utils/uriToHttp.ts",[],"/home/0mkar/Karma/limit-orders-lib/packages/limit-orders-react/src/web3/index.tsx",[],{"ruleId":"719","severity":1,"message":"720","line":295,"column":6,"nodeType":"721","endLine":306,"endColumn":4,"suggestions":"722"},{"ruleId":"719","severity":1,"message":"723","line":383,"column":6,"nodeType":"721","endLine":383,"endColumn":8,"suggestions":"724"},{"ruleId":"719","severity":1,"message":"725","line":216,"column":55,"nodeType":"721","endLine":221,"endColumn":4,"suggestions":"726"},{"ruleId":"719","severity":1,"message":"725","line":223,"column":55,"nodeType":"721","endLine":228,"endColumn":4,"suggestions":"727"},{"ruleId":"719","severity":1,"message":"728","line":345,"column":6,"nodeType":"721","endLine":353,"endColumn":4,"suggestions":"729"},{"ruleId":"730","severity":1,"message":"731","line":2,"column":33,"nodeType":"732","messageId":"733","endLine":2,"endColumn":38},{"ruleId":"719","severity":1,"message":"734","line":93,"column":6,"nodeType":"721","endLine":93,"endColumn":55,"suggestions":"735"},{"ruleId":"719","severity":1,"message":"736","line":66,"column":6,"nodeType":"721","endLine":66,"endColumn":41,"suggestions":"737"},{"ruleId":"730","severity":1,"message":"738","line":22,"column":10,"nodeType":"732","messageId":"733","endLine":22,"endColumn":30},"react-hooks/exhaustive-deps","React Hook useCallback has a missing dependency: 'slippage'. Either include it or remove the dependency array.","ArrayExpression",["739"],"React Hook useEffect has a missing dependency: 'handleSlippageInput'. Either include it or remove the dependency array.",["740"],"React Hook useMemo has unnecessary dependencies: 'chainId', 'gelatoLibrary', and 'isEthereum'. Either exclude them or remove the dependency array.",["741"],["742"],"React Hook useCallback has a missing dependency: 'maxOutputAmount'. Either include it or remove the dependency array.",["743"],"@typescript-eslint/no-unused-vars","'utils' is defined but never used.","Identifier","unusedVar","React Hook useMemo has a missing dependency: 'slippage'. Either include it or remove the dependency array.",["744"],"React Hook useCallback has a missing dependency: 'type'. Either include it or remove the dependency array.",["745"],"'useGelatoLimitOrders' is defined but never used.",{"desc":"746","fix":"747"},{"desc":"748","fix":"749"},{"desc":"750","fix":"751"},{"desc":"752","fix":"753"},{"desc":"754","fix":"755"},{"desc":"756","fix":"757"},{"desc":"758","fix":"759"},"Update the dependencies array to be: [handleStopLimitOrderSubmission, tradeToConfirm, showConfirm, currencies.input?.wrapped.address, currencies.input?.isNative, currencies.output?.wrapped.address, currencies.output?.isNative, rawAmounts.input, rawAmounts.output, account, slippage]",{"range":"760","text":"761"},"Update the dependencies array to be: [handleSlippageInput]",{"range":"762","text":"763"},"Update the dependencies array to be: [order.minReturn]",{"range":"764","text":"765"},"Update the dependencies array to be: [order.maxReturn]",{"range":"766","text":"767"},"Update the dependencies array to be: [handleStopLimitOrderCancellation, showConfirm, inputToken.symbol, outputToken.symbol, inputAmount, outputAmount, maxOutputAmount, order]",{"range":"768","text":"769"},"Update the dependencies array to be: [outputAmount, library, chainId, rawOutputAmount, slippage]",{"range":"770","text":"771"},"Update the dependencies array to be: [onAcceptChanges, recipient, trade, type]",{"range":"772","text":"773"},[8004,8284],"[handleStopLimitOrderSubmission, tradeToConfirm, showConfirm, currencies.input?.wrapped.address, currencies.input?.isNative, currencies.output?.wrapped.address, currencies.output?.isNative, rawAmounts.input, rawAmounts.output, account, slippage]",[10425,10427],"[handleSlippageInput]",[6498,6572],"[order.minReturn]",[6630,6704],"[order.maxReturn]",[9855,9994],"[handleStopLimitOrderCancellation, showConfirm, inputToken.symbol, outputToken.symbol, inputAmount, outputAmount, maxOutputAmount, order]",[3096,3145],"[outputAmount, library, chainId, rawOutputAmount, slippage]",[1686,1721],"[onAcceptChanges, recipient, trade, type]"]